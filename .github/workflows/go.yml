# This workflow will build a golang project

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Run Unit Test
      run: make unit-test

#    - name: Set Commit SHA as variable
#      run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
#
#    - name: Build & Push Docker image
#      uses: mr-smithers-excellent/docker-build-push@v5
#      with:
#        image: mertcakmak2/go-e2e
#        tags: ${SHORT_SHA}
#        registry: docker.io
#        dockerfile: Dockerfile
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: test-go-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        IMAGE_TAG_SHORT=${IMAGE_TAG:0:8}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_SHORT .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_SHORT
